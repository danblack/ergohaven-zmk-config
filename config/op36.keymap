#include "keys_ru.h"
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>

&mt {
    quick-tap-ms = <200>;
    flavor = "tap-preferred";
    require-prior-idle-ms = <125>;
};

/ {
    behaviors {
        hml: home_row_mod_left {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            require-prior-idle-ms = <150>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            bindings = <&kp>, <&kp>;

            hold-trigger-key-positions = <5 6 7 8 9 15 16 17 18 19 25 26 27 28 29 33 34 35>;
            hold-trigger-on-release;
        };

        hmr: home_row_mod_right {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            require-prior-idle-ms = <150>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            bindings = <&kp>, <&kp>;

            hold-trigger-key-positions = <0 1 2 3 4 10 11 12 13 14 20 21 22 23 24 30 31 32>;
            hold-trigger-on-release;
        };
    };

    combos { compatible = "zmk,combos"; };

    macros {
        RU_CURRET: RU_CURET {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&kp LS(LA(LC(LG(E))))>,
                <&macro_tap_time 20>,
                <&kp LS(N6)>,
                <&macro_tap_time 20>,
                <&kp LA(LC(LG(LS(R))))>;

            label = "RU_CURET";
        };

        RU_AMP: RU_AMP {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&kp LS(LA(LC(LG(E))))>,
                <&macro_tap_time 20>,
                <&kp LS(N7)>,
                <&macro_tap_time 20>,
                <&kp LA(LC(LG(LS(R))))>;

            label = "RU_AMP";
        };

        RU_AST: RU_AST {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&kp LS(LA(LC(LG(E))))>,
                <&macro_tap_time 20>,
                <&kp LS(N8)>,
                <&macro_tap_time 20>,
                <&kp LA(LC(LG(LS(R))))>;

            label = "RU_AST";
        };

        RU_AT: RU_AT {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&kp LS(LA(LC(LG(E))))>,
                <&macro_tap_time 20>,
                <&kp LS(NUMBER_2)>,
                <&macro_tap_time 20>,
                <&kp LA(LC(LG(LS(R))))>;

            label = "RU_AT";
        };

        RU_TIL: RU_TIL {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&kp LS(LA(LC(LG(E))))>,
                <&macro_tap_time 20>,
                <&kp LS(GRAVE)>,
                <&macro_tap_time 20>,
                <&kp LA(LC(LG(LS(R))))>;

            label = "RU_TIL";
        };

RU_LCB: RU_LCB {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&kp LS(LA(LC(LG(E))))>,
                <&macro_tap_time 20>,
                <&kp LS(LEFT_BRACKET)>,
                <&macro_tap_time 20>,
                <&kp LA(LC(LG(LS(R))))>;

            label = "RU_LCB";
        };
    };

RU_LBR: RU_LBR {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&kp LS(LA(LC(LG(E))))>,
                <&macro_tap_time 20>,
                <&kp LEFT_BRACKET>,
                <&macro_tap_time 20>,
                <&kp LA(LC(LG(LS(R))))>;

            label = "RU_LBR";
        };
    };

RU_RBR: RU_RBR {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&kp LS(LA(LC(LG(E))))>,
                <&macro_tap_time 20>,
                <&kp RIGHT_BRACKET>,
                <&macro_tap_time 20>,
                <&kp LA(LC(LG(LS(R))))>;

            label = "RU_RBR";
        };
    };

RU_RCB: RU_RCB {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&kp LS(LA(LC(LG(E))))>,
                <&macro_tap_time 20>,
                <&kp LS(RIGHT_BRACKET)>,
                <&macro_tap_time 20>,
                <&kp LA(LC(LG(LS(R))))>;

            label = "RU_RCB";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        KAN {
            bindings = <
  &lt 4 Q  &kp W  &kp E  &kp R       &kp T                                    &kp Y           &kp U             &kp I      &kp O    &kp P
  &kp A    &kp S  &kp D  &kp F       &kp G                                    &kp H           &kp J             &kp K      &kp L    &kp SEMI
  &kp Z    &kp X  &kp C  &kp V       &kp B                                    &kp N           &kp M             &kp COMMA  &kp DOT  &kp FSLH
                         &kp ESCAPE  &kp SPACE  &kp LEFT_GUI    &kp LEFT_ALT  &kp LEFT_SHIFT  &kp LEFT_CONTROL
            >;

            display-name = "Kanata";
        };

        ENG {
            display-name = "English";
            bindings = <
  &kp Q  &kp W  &kp E  &kp R       &kp T                                          &kp Y           &kp U             &kp I      &kp O    &kp P
  &kp A  &kp S  &kp D  &kp F       &kp G                                          &kp H           &kp J             &kp K      &kp L    &kp SEMI
  &kp Z  &kp X  &kp C  &kp V       &kp B                                          &kp N           &kp M             &kp COMMA  &kp DOT  &kp FSLH
                       &kp ESCAPE  &lt 3 SPACE  &lt 7 LEFT_GUI    &lt 5 LEFT_ALT  &kp LEFT_SHIFT  &kp LEFT_CONTROL
            >;
        };

        RUS {
            display-name = "Russian";
            bindings = <
  &kp Q  &kp W  &kp E  &kp R       &kp T                                      &kp Y           &kp U             &kp I      &kp O    &kp P
  &kp A  &kp S  &kp D  &kp F       &kp G                                      &kp H           &kp J             &kp K      &kp L    &kp SEMI
  &kp Z  &kp X  &kp C  &kp V       &kp B                                      &kp N           &kp M             &kp COMMA  &kp DOT  &kp FSLH
                       &kp ESCAPE  &lt 6 SPACE  &kp LEFT_GUI    &kp LEFT_ALT  &kp LEFT_SHIFT  &kp LEFT_CONTROL
            >;
        };

        NAV {
            bindings = <
  &kp LG(LS(Z))     &kp LG(X)       &kp LG(C)     &kp LG(V)         &kp LC(LS(V))                    &none          &kp HOME        &kp UP      &kp END     &kp PAGE_UP
  &sk LEFT_CONTROL  &sk LEFT_SHIFT  &sk LEFT_ALT  &sk LEFT_GUI      &kp LG(Z)                        &kp BACKSPACE  &kp LEFT_ARROW  &kp DOWN    &kp RIGHT   &kp PAGE_DOWN
  &none             &none           &kp LG(A)     &sk LEFT_CONTROL  &none                            &kp CAPSLOCK   &none           &kp ESCAPE  &kp DELETE  &none
                                                  &none             &trans         &none    &kp TAB  &kp ENTER      &none
            >;

            display-name = "Navigation";
        };

        adj {
            bindings = <
  &none        &none  &none  &none   &none                     &bt BT_SEL 0  &bt BT_SEL 1         &bt BT_SEL 2       &bt BT_SEL 3        &bt BT_CLR
  &none        &none  &none  &none   &none                     &out OUT_BLE  &hmr RCTRL C_VOL_DN  &hmr RSHFT C_MUTE  &hmr LALT C_VOL_UP  &kp RGUI
  &bootloader  &to 1  &none  &none   &kp Z                     &out OUT_USB  &kp C_PREV           &kp C_PP           &kp C_NEXT          &studio_unlock
                             &trans  &trans  &trans    &trans  &trans        &trans
            >;

            display-name = "Adjust";
        };

        LSM_EN {
            bindings = <
  &kp LS(N6)            &kp LS(N7)        &kp LS(N8)        &kp LS(NUMBER_2)   &kp LS(GRAVE)                                   &none          &none  &none  &none  &none
  &kp LS(LEFT_BRACKET)  &kp LEFT_BRACKET  &kp LS(NUMBER_5)  &kp RIGHT_BRACKET  &kp LS(RIGHT_BRACKET)                           &kp BACKSPACE  &none  &none  &none  &none
  &trans                &kp LS(NUBS)      &kp LS(NUMBER_4)  &kp NUBS           &trans                                          &none          &none  &none  &none  &tog 0
                                                            &kp LS(NUMBER_3)   &kp LS(N1)             &kp LS(MINUS)    &trans  &none          &none
            >;
        };

        LSM_RU {
            bindings = <
  &RU_CURRET            &RU_AMP           &RU_AST           &RU_AT             &RU_TIL                                         &none          &none  &none  &none  &none
  &kp LS(LEFT_BRACKET)  &kp LEFT_BRACKET  &kp LS(NUMBER_5)  &kp RIGHT_BRACKET  &kp LS(RIGHT_BRACKET)                           &kp BACKSPACE  &none  &none  &none  &none
  &trans                &kp LS(NUBS)      &kp LS(NUMBER_4)  &kp NUBS           &trans                                          &none          &none  &none  &none  &none
                                                            &kp LS(NUMBER_3)   &kp LS(N1)             &kp LS(MINUS)    &trans  &none          &none
            >;
        };

        RSM_EN {
            bindings = <
  &none  &none  &none  &none  &none                                   &none                  &none  &none  &none  &none
  &none  &none  &none  &none  &none                                   &none                  &none  &none  &none  &none
  &none  &none  &none  &none  &none                                   &none                  &none  &none  &none  &none
                       &none  &none  &trans    &kp LS(LA(LC(LG(R))))  &kp LS(LA(LC(LG(E))))  &none
            >;
        };
    };
};
